name: Release Go Application

on:
  push:
    tags:
      - 'v*' 

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]
    steps:
      # Obtener el c√≥digo fuente
      - name: Checkout code
        uses: actions/checkout@v2

      # Configurar Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.18' 
      - name: Install dependencies
        run: |
          cd api-server
          go mod tidy

      - name: Build the Go project
        run: |
          cd api-server
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o api-server-${{ matrix.os }}-${{ matrix.arch }} ./...

      - name: Create release asset
        run: |
          cd api-server
          tar -czf api-server-${{ matrix.os }}-${{ matrix.arch }}.tar.gz api-server-${{ matrix.os }}-${{ matrix.arch }}


      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }} 
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 


      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: api-server/api-server-${{ matrix.os }}-${{ matrix.arch }}.tar.gz  
          asset_name: api-server-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip
